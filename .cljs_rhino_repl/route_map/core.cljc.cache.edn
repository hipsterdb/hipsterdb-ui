;; Analyzed by ClojureScript 1.8.40
{:use-macros nil, :excludes #{}, :name route-map.core, :imports nil, :requires {str clojure.string, clojure.string clojure.string}, :uses nil, :defs {Match {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name route-map.core/Match, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 17, :type true, :column 12, :internal-ctor true, :line 11, :record true, :end-line 11, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, pathify {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 8, :column 7, :end-line 8, :end-column 14, :arglists (quote ([path]))}, :name route-map.core/pathify, :variadic false, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 14, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, -match {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 22, :column 7, :end-line 22, :end-column 13, :arglists (quote ([rs pth]))}, :name route-map.core/-match, :variadic false, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 13, :method-params ([rs pth]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([rs pth]))}, match {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 51, :column 7, :end-line 51, :end-column 12, :arglists (quote ([path routes]))}, :name route-map.core/match, :variadic false, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 12, :method-params ([path routes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path routes]))}, get-param {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 18, :column 8, :end-line 18, :end-column 17, :private true, :arglists (quote ([node]))}, :private true, :name route-map.core/get-param, :variadic false, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 17, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, to-url {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 4, :column 7, :end-line 4, :end-column 13, :arglists (quote ([route & [params]])), :doc "build url from route and params", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(route [params])], :arglists ([route & [params]]), :arglists-meta (nil)}}, :name route-map.core/to-url, :variadic true, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(route [params])], :arglists ([route & [params]]), :arglists-meta (nil)}, :method-params [(route [params])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 1, :fn-var true, :arglists ([route & [params]]), :doc "build url from route and params"}, wrap-route-map {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 59, :column 7, :end-line 59, :end-column 21, :arglists (quote ([h routes]))}, :name route-map.core/wrap-route-map, :variadic false, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 21, :method-params ([h routes]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([h routes]))}, is-glob? {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 14, :column 16, :end-line 14, :end-column 24, :arglists (quote ([k]))}, :name route-map.core/is-glob?, :variadic false, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 24, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, ->Match {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 11, :column 12, :end-line 11, :end-column 17, :internal-ctor true, :factory :positional, :arglists (quote ([parents params match]))}, :name route-map.core/->Match, :variadic false, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 17, :method-params ([parents params match]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 11, :end-line 11, :max-fixed-arity 3, :fn-var true, :arglists (quote ([parents params match]))}, map->Match {:protocol-inline nil, :meta {:file "/home/nicola/pgtron/.cljs_rhino_repl/route_map/core.cljc", :line 11, :column 12, :end-line 11, :end-column 17, :internal-ctor true, :factory :map, :arglists (quote ([G__35969]))}, :name route-map.core/map->Match, :variadic false, :file ".cljs_rhino_repl/route_map/core.cljc", :end-column 17, :method-params ([G__35969]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__35969]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{match :params :route-match params :. :parents :uri parents :match :request-method}, :order [:parents :params :match parents params match :. :request-method :uri :route-match]}, :doc nil}